{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PushNotifications","Plugins","App","console","log","requestPermission","then","result","granted","register","addListener","token","value","error","JSON","stringify","notification","className","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAGQA,G,iBAAsBC,EAAtBD,mBAuCOE,MArCf,WA6BE,OA3BAC,QAAQC,IAAI,QAEZJ,EAAkBK,oBAAoBC,MAAM,SAAAC,GACtCA,EAAOC,QACTR,EAAkBS,WAElBN,QAAQC,IAAI,kBAIhBJ,EAAkBU,YAAY,gBAAgB,SAAAC,GAC5CR,QAAQC,IAAI,gCAAiCO,EAAO,cAAeA,EAAMC,UAG3EZ,EAAkBU,YAAY,qBAAqB,SAAAG,GACjDV,QAAQC,IAAI,0BAA2BU,KAAKC,UAAUF,OAGxDb,EAAkBU,YAAY,4BAA4B,SAAAM,GACxDb,QAAQC,IAAI,0BAA2BU,KAAKC,UAAUC,OAGxDhB,EAAkBU,YAAY,mCAAmC,SAAAM,GAC/Db,QAAQC,IAAI,0BAA2BU,KAAKC,UAAUC,OAKtD,sBAAKC,UAAU,MAAf,UACE,4CACA,wBAAQC,QAAS,kBAAMf,QAAQC,IAAI,UAAnC,0BCzBSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7ace313a.chunk.js","sourcesContent":["import './App.css';\nimport { Plugins } from '@capacitor/core';\n\nconst { PushNotifications } = Plugins;\n\nfunction App() {\n\n  console.log(\"Init\")\n\n  PushNotifications.requestPermission().then( result => {\n    if (result.granted) {\n      PushNotifications.register()\n    } else {\n      console.log('Not granted')\n    }\n  })\n\n  PushNotifications.addListener('registration', token => {\n    console.log('Notification granted, token: ', token, ' --- value:', token.value)\n  })\n\n  PushNotifications.addListener('registrationError', error => {\n    console.log('Error on registration: ', JSON.stringify(error))\n  })\n\n  PushNotifications.addListener('pushNotificationReceived', notification => {\n    console.log('Push action performed: ', JSON.stringify(notification))\n  })\n\n  PushNotifications.addListener('pushNotificationActionPerformed', notification => {\n    console.log('Push action performed: ', JSON.stringify(notification))\n  })\n\n\n  return (\n    <div className='App'>\n      <p>Hello world</p>\n      <button onClick={() => console.log(\"hello\")}>Click me</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}